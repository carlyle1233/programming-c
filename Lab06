##include <stdio.h>
#include <stdlib.h> // rand() 함수 포함 라이브러리 
#define ARRAYSIZE 10000



void copyarray(int a[], int b[], int n);
void printarray(int a[], int n);
int isort(int v[], int n); //삽입 정렬 수행 함수: 배열 원소의 교환 횟수 출력시 필요 


/*난수: 무작위의 숫자
난수를 만들기 위해서는 rand()라는 함수 사용 */ 



//Start 
//1. numbers[]에 10,000개의 난수 담음 
//2. 8개만 출력-printarray 이용 
//2. data[]에 10개만 옮겨담음 - copyarray 이용
//3. data[]를 삽입정렬- isort 함수 이용 
//4. data[]중에 앞에 5개만 출력 
//5. data[] 삽입정렬 결과 swap 수행 횟수 출력 


main()
{
	int numbers[ARRAYSIZE], data[ARRAYSIZE]; 
	int i, n;
	int count;


	//10,000개의 숫자 랜덤으로 만들기 
	for(i = 0; i < ARRAYSIZE; i++)
		numbers[i] = rand();                 //num[]에 10,000개 난수 생성하여 담음 
	printf("Before sort (the first 8 numbers): ");
	printarray(numbers, 8); // 그 중 앞에 8개 출력 
	printf("\n");



	//n을 10,100, 1000,... 늘려가며 data[]에 복사 
	//data [] 삽입 정렬 후 결과 출력 
	for (n = 10; n <= ARRAYSIZE; n *= 10) 
	
	{
		copyarray(data, numbers, n);
		count = isort(data, n);
		printf("After insertion sort (the first 5 numbers) : ");
		printarray(data, 5);
		printf("The number of swaps in insertion sort (n= %d)", n);
		printf(": %d\n\n", count);
		
	}
	return 0;
}

//배열 a의 원소 n개 출력하는 함수, 출력을 위한 반복문 필요. 숫자 하나 출려 후 띄어쓰기  
void printarray(int a[], int n)
{   
	int i;
	for (i = 0; i < n; i++)
	{
		printf("%d ", a[i]);
	}
	printf("\n");

}


//배열 b의 원소 n개 배열 a로 복사하는 함수: 복사를 위한 반복문 필요 
void copyarray(int a[], int b[], int n)
{
	int i;
	for (i = 0; i < n; i++) {
		a[i] = b[i];
	}
}



int isort(int v[], int n) //count 변수 선언 
{
	int i, j, temp;
	int count = 0;

	for (i = 1; i < n; i++) {

		int temp = v[i];
		int j = i - 1;
		while (j >= 0 && v[j] > temp) {
			v[j + 1] = v[j];
			j--;
			count++;
			
		}
		v[j+1] = temp;
	}
	return count;
} 




